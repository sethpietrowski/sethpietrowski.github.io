{"version":3,"file":"PopDemographics-DBNMpvEm.js","sources":["../../node_modules/lucide-react/dist/esm/icons/calendar.js","../../node_modules/lucide-react/dist/esm/icons/graduation-cap.js","../../node_modules/lucide-react/dist/esm/icons/map-pin.js","../../node_modules/lucide-react/dist/esm/icons/refresh-cw.js","../../node_modules/lucide-react/dist/esm/icons/triangle-alert.js","../../node_modules/lucide-react/dist/esm/icons/users.js","../../src/pages/PopDemographics.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M8 2v4\", key: \"1cmpym\" }],\n  [\"path\", { d: \"M16 2v4\", key: \"4m81vk\" }],\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"4\", rx: \"2\", key: \"1hopcy\" }],\n  [\"path\", { d: \"M3 10h18\", key: \"8toen8\" }]\n];\nconst Calendar = createLucideIcon(\"calendar\", __iconNode);\n\nexport { __iconNode, Calendar as default };\n//# sourceMappingURL=calendar.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z\",\n      key: \"j76jl0\"\n    }\n  ],\n  [\"path\", { d: \"M22 10v6\", key: \"1lu8f3\" }],\n  [\"path\", { d: \"M6 12.5V16a6 3 0 0 0 12 0v-3.5\", key: \"1r8lef\" }]\n];\nconst GraduationCap = createLucideIcon(\"graduation-cap\", __iconNode);\n\nexport { __iconNode, GraduationCap as default };\n//# sourceMappingURL=graduation-cap.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0\",\n      key: \"1r0f0z\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"10\", r: \"3\", key: \"ilqhr7\" }]\n];\nconst MapPin = createLucideIcon(\"map-pin\", __iconNode);\n\nexport { __iconNode, MapPin as default };\n//# sourceMappingURL=map-pin.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\", key: \"v9h5vc\" }],\n  [\"path\", { d: \"M21 3v5h-5\", key: \"1q7to0\" }],\n  [\"path\", { d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\", key: \"3uifl3\" }],\n  [\"path\", { d: \"M8 16H3v5\", key: \"1cv678\" }]\n];\nconst RefreshCw = createLucideIcon(\"refresh-cw\", __iconNode);\n\nexport { __iconNode, RefreshCw as default };\n//# sourceMappingURL=refresh-cw.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\",\n      key: \"wmoenq\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n];\nconst TriangleAlert = createLucideIcon(\"triangle-alert\", __iconNode);\n\nexport { __iconNode, TriangleAlert as default };\n//# sourceMappingURL=triangle-alert.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"path\", { d: \"M16 3.128a4 4 0 0 1 0 7.744\", key: \"16gr8j\" }],\n  [\"path\", { d: \"M22 21v-2a4 4 0 0 0-3-3.87\", key: \"kshegd\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }]\n];\nconst Users = createLucideIcon(\"users\", __iconNode);\n\nexport { __iconNode, Users as default };\n//# sourceMappingURL=users.js.map\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { MapPin, Users, GraduationCap, Vote, Calendar, Palette, RefreshCw, AlertTriangle } from 'lucide-react';\r\nimport Banner from '../components/Banner/banner.jsx';\r\n\r\n//US state positions (approx) \r\nconst US_STATE_POSITIONS = {\r\n    'AK': { row: 10, col: 0 }, \r\n    'HI': { row: 10, col: 1 },\r\n    'WA': { row: 1, col: 1 },\r\n    'OR': { row: 2, col: 1 },\r\n    'CA': { row: 3, col: 1 },\r\n    'NV': { row: 3, col: 2 },\r\n    'ID': { row: 2, col: 2 },\r\n    'MT': { row: 1, col: 3 },\r\n    'WY': { row: 2, col: 3 },\r\n    'UT': { row: 3, col: 3 },\r\n    'CO': { row: 3, col: 4 },\r\n    'AZ': { row: 4, col: 2 },\r\n    'NM': { row: 4, col: 3 },\r\n    'ND': { row: 1, col: 4 },\r\n    'SD': { row: 2, col: 4 },\r\n    'NE': { row: 3, col: 5 },\r\n    'KS': { row: 4, col: 5 },\r\n    'OK': { row: 5, col: 5 },\r\n    'TX': { row: 6, col: 4 },\r\n    'MN': { row: 1, col: 5 },\r\n    'IA': { row: 2, col: 5 },\r\n    'MO': { row: 3, col: 6 },\r\n    'AR': { row: 4, col: 6 },\r\n    'LA': { row: 5, col: 6 },\r\n    'WI': { row: 1, col: 6 },\r\n    'IL': { row: 2, col: 6 },\r\n    'MS': { row: 5, col: 7 },\r\n    'AL': { row: 5, col: 8 },\r\n    'TN': { row: 4, col: 7 },\r\n    'KY': { row: 3, col: 7 },\r\n    'IN': { row: 2, col: 7 },\r\n    'MI': { row: 1, col: 7 },\r\n    'OH': { row: 2, col: 8 },\r\n    'WV': { row: 3, col: 8 },\r\n    'VA': { row: 4, col: 9 },\r\n    'NC': { row: 5, col: 9 },\r\n    'SC': { row: 6, col: 9 },\r\n    'GA': { row: 6, col: 8 },\r\n    'FL': { row: 7, col: 9 },\r\n    'PA': { row: 2, col: 9 },\r\n    'NY': { row: 1, col: 9 },\r\n    'VT': { row: 1, col: 10 },\r\n    'NH': { row: 1, col: 11 },\r\n    'ME': { row: 0, col: 11 },\r\n    'MA': { row: 2, col: 10 },\r\n    'RI': { row: 2, col: 11 },\r\n    'CT': { row: 3, col: 10 },\r\n    'NJ': { row: 3, col: 9 },\r\n    'DE': { row: 4, col: 10 },\r\n    'MD': { row: 4, col: 8 },\r\n    'DC': { row: 4, col: 8 } // Same as MD\r\n};\r\n\r\n//Census data is pulled from static JSON file at build time (API Key stored outside of repo for privacy)\r\nconst ACS_YEAR = '2022';\r\nconst LOCAL_DATA_URL = `/data/census-${ACS_YEAR}.json`; // produced at build time\r\n\r\n// ACS variable codes for demographic data\r\nconst ACS_VARIABLES = {\r\n    population: 'B01003_001E', // Total population\r\n    age: {\r\n        'Total': 'B01001_001E',\r\n        '18-34': ['B01001_007E', 'B01001_008E', 'B01001_009E', 'B01001_010E', 'B01001_011E', 'B01001_012E', 'B01001_031E', 'B01001_032E', 'B01001_033E', 'B01001_034E', 'B01001_035E', 'B01001_036E'],\r\n        '35-64': ['B01001_013E', 'B01001_014E', 'B01001_015E', 'B01001_016E', 'B01001_017E', 'B01001_018E', 'B01001_019E', 'B01001_037E', 'B01001_038E', 'B01001_039E', 'B01001_040E', 'B01001_041E', 'B01001_042E', 'B01001_043E'],\r\n        '65+': ['B01001_020E', 'B01001_021E', 'B01001_022E', 'B01001_023E', 'B01001_024E', 'B01001_025E', 'B01001_044E', 'B01001_045E', 'B01001_046E', 'B01001_047E', 'B01001_048E', 'B01001_049E']\r\n    },\r\n    race: {\r\n        'Total': 'B02001_001E',\r\n        'White': 'B02001_002E',\r\n        'Black': 'B02001_003E',\r\n        'Asian': 'B02001_005E',\r\n        'Hispanic': 'B03003_003E'\r\n    },\r\n    education: {\r\n        'Total': 'B15003_001E',\r\n        'High School': ['B15003_017E', 'B15003_018E'],\r\n        'Some College': ['B15003_019E', 'B15003_020E'],\r\n        \"Bachelor's\": 'B15003_022E',\r\n        'Graduate': ['B15003_023E', 'B15003_024E', 'B15003_025E']\r\n    },\r\n    income: {\r\n        'Total': 'B19001_001E',\r\n        '<$35k': ['B19001_002E', 'B19001_003E', 'B19001_004E', 'B19001_005E', 'B19001_006E', 'B19001_007E'],\r\n        '$35k-$75k': ['B19001_008E', 'B19001_009E', 'B19001_010E', 'B19001_011E', 'B19001_012E'],\r\n        '$75k+': ['B19001_013E', 'B19001_014E', 'B19001_015E', 'B19001_016E', 'B19001_017E']\r\n    }\r\n};\r\n\r\nconst METRICS = {\r\n    age: { label: 'Age Groups', icon: Calendar, color: 'blue' },\r\n    race: { label: 'Race/Ethnicity', icon: Users, color: 'green' },\r\n    education: { label: 'Education', icon: GraduationCap, color: 'red' },\r\n    income: { label: 'Income', icon: MapPin, color: 'yellow' }\r\n};\r\n\r\n//Mock data fallback (no API KEY)\r\nconst generateMockStateData = () => {\r\n    const states = [];\r\n    Object.keys(US_STATE_POSITIONS).forEach(stateCode => {\r\n        if (stateCode !== 'DC') {\r\n            states.push({\r\n                state: stateCode,\r\n                population: Math.floor(Math.random() * 10000000) + 100000,\r\n                demographics: {\r\n                    age: {\r\n                        'Total': 100,\r\n                        '18-34': Math.random() * 35 + 15,\r\n                        '35-64': Math.random() * 45 + 25,\r\n                        '65+': Math.random() * 25 + 10,\r\n                    },\r\n                    race: {\r\n                        'Total': 100,\r\n                        'White': Math.random() * 80 + 10,\r\n                        'Black': Math.random() * 40 + 5,\r\n                        'Asian': Math.random() * 20 + 2,\r\n                        'Hispanic': Math.random() * 30 + 5,\r\n                    },\r\n                    education: {\r\n                        'Total': 100,\r\n                        'High School': Math.random() * 40 + 20,\r\n                        'Some College': Math.random() * 30 + 15,\r\n                        \"Bachelor's\": Math.random() * 25 + 10,\r\n                        'Graduate': Math.random() * 15 + 5,\r\n                    },\r\n                    income: {\r\n                        'Total': 100,\r\n                        '<$35k': Math.random() * 40 + 15,\r\n                        '$35k-$75k': Math.random() * 40 + 20,\r\n                        '$75k+': Math.random() * 30 + 15,\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return states;\r\n};\r\n\r\nconst getColorIntensity = (value, max) => {\r\n    if (!value || !max) return 0;\r\n    return Math.min(value, max);\r\n};\r\n\r\nconst getMetricColor = (value, maxValue, baseColor) => {\r\n    const intensity = getColorIntensity(value, maxValue);\r\n    switch(baseColor) {\r\n        case 'blue':\r\n            return `rgb(${255 - Math.floor(intensity * 200)}, ${255 - Math.floor(intensity * 100)}, 255)`;\r\n        case 'green':\r\n            return `rgb(${255 - Math.floor(intensity * 200)}, 255, ${255 - Math.floor(intensity * 100)})`;\r\n        case 'purple':\r\n            return `rgb(${200 + Math.floor(intensity * 55)}, ${255 - Math.floor(intensity * 200)}, 255)`;\r\n        case 'yellow':\r\n            return `rgb(255, 255, ${255 - Math.floor(intensity * 200)})`;\r\n        default:\r\n            return `rgb(${255 - Math.floor(intensity * 100)}, ${255 - Math.floor(intensity * 100)}, ${255 - Math.floor(intensity * 100)})`;\r\n    }\r\n};\r\n\r\n//Census API functions\r\nconst buildVariableString = (variables) => {\r\n    const allVars = new Set();\r\n    \r\n    Object.values(variables).forEach(category => {\r\n        if (typeof category === 'object') {\r\n            Object.values(category).forEach(variable => {\r\n                if (Array.isArray(variable)) {\r\n                    variable.forEach(v => allVars.add(v));\r\n                } else {\r\n                    allVars.add(variable);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    \r\n    return Array.from(allVars).join(',');\r\n};\r\n\r\nconst aggregateVariables = (data, variableMap) => {\r\n    const result = {};\r\n    \r\n    Object.entries(variableMap).forEach(([key, variables]) => {\r\n        if (Array.isArray(variables)) {\r\n            // Sum multiple variables\r\n            result[key] = variables.reduce((sum, variable) => {\r\n                const value = parseInt(data[variable]) || 0;\r\n                return sum + value;\r\n            }, 0);\r\n        } else {\r\n            // Single variable\r\n            result[key] = parseInt(data[variables]) || 0;\r\n        }\r\n    });\r\n    \r\n    return result;\r\n};\r\n\r\nconst fetchCensusData = async () => {\r\n    if (!CENSUS_API_KEY) {\r\n        console.log('No Census API key provided, using mock data');\r\n        return generateMockStateData();\r\n    }\r\n\r\n    try {\r\n        const variableString = buildVariableString(ACS_VARIABLES);\r\n        const url = `${CENSUS_BASE_URL}/${ACS_YEAR}/acs/acs5?get=${variableString}&for=state:*&key=${CENSUS_API_KEY}`;\r\n        \r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error(`API request failed: ${response.statusText}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        const [headers, ...rows] = data;\r\n        \r\n        return rows.map(row => {\r\n            const rowData = {};\r\n            headers.forEach((header, index) => {\r\n                rowData[header] = row[index];\r\n            });\r\n            \r\n            const stateCode = rowData.state;\r\n            const stateName = getStateNameFromCode(stateCode);\r\n            \r\n            if (!stateName || !US_STATE_POSITIONS[stateName]) {\r\n                return null;\r\n            }\r\n            \r\n            return {\r\n                state: stateName,\r\n                population: parseInt(rowData[ACS_VARIABLES.population]) || 0,\r\n                demographics: {\r\n                    age: calculatePercentages(aggregateVariables(rowData, ACS_VARIABLES.age)),\r\n                    race: calculatePercentages(aggregateVariables(rowData, ACS_VARIABLES.race)),\r\n                    education: calculatePercentages(aggregateVariables(rowData, ACS_VARIABLES.education)),\r\n                    income: calculatePercentages(aggregateVariables(rowData, ACS_VARIABLES.income))\r\n                }\r\n            };\r\n        }).filter(Boolean);\r\n        \r\n    } catch (error) {\r\n        console.error('Error fetching Census data:', error);\r\n        return generateMockStateData();\r\n    }\r\n};\r\n\r\nconst calculatePercentages = (data) => {\r\n    const total = data.Total || 1;\r\n    const result = {};\r\n    \r\n    Object.entries(data).forEach(([key, value]) => {\r\n        if (key !== 'Total') {\r\n            result[key] = (value / total) * 100;\r\n        } else {\r\n            result[key] = value;\r\n        }\r\n    });\r\n    \r\n    return result;\r\n};\r\n\r\n// State code to abbreviation mapping SIMPLIFIED FIX THIS\r\nconst getStateNameFromCode = (fipsCode) => {\r\n    const fipsToState = {\r\n        '01': 'AL', '02': 'AK', '04': 'AZ', '05': 'AR', '06': 'CA', '08': 'CO',\r\n        '09': 'CT', '10': 'DE', '11': 'DC', '12': 'FL', '13': 'GA', '15': 'HI',\r\n        '16': 'ID', '17': 'IL', '18': 'IN', '19': 'IA', '20': 'KS', '21': 'KY',\r\n        '22': 'LA', '23': 'ME', '24': 'MD', '25': 'MA', '26': 'MI', '27': 'MN',\r\n        '28': 'MS', '29': 'MO', '30': 'MT', '31': 'NE', '32': 'NV', '33': 'NH',\r\n        '34': 'NJ', '35': 'NM', '36': 'NY', '37': 'NC', '38': 'ND', '39': 'OH',\r\n        '40': 'OK', '41': 'OR', '42': 'PA', '44': 'RI', '45': 'SC', '46': 'SD',\r\n        '47': 'TN', '48': 'TX', '49': 'UT', '50': 'VT', '51': 'VA', '53': 'WA',\r\n        '54': 'WV', '55': 'WI', '56': 'WY'\r\n    };\r\n    return fipsToState[fipsCode];\r\n};\r\n\r\nexport default function USDemographicsViewer() {\r\n    const [states, setStates] = useState([]);\r\n    const [selectedMetric, setSelectedMetric] = useState('age');\r\n    const [selectedSubMetric, setSelectedSubMetric] = useState('18-34');\r\n    const [hoveredState, setHoveredState] = useState(null);\r\n    const [selectedState, setSelectedState] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [usingMockData, setUsingMockData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            setLoading(true);\r\n            try {\r\n            // Load the pre-fetched JSON from /public/data/\r\n            const res = await fetch(LOCAL_DATA_URL);\r\n            if (!res.ok) throw new Error(`Failed to load ${LOCAL_DATA_URL}`);\r\n            const data = await res.json();\r\n\r\n            setStates(data);\r\n            setUsingMockData(false); // because now it's real static data\r\n            } catch (error) {\r\n            console.error('Error loading static data:', error);\r\n            setStates(generateMockStateData());\r\n            setUsingMockData(true);\r\n            } finally {\r\n            setLoading(false);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n        }, []);\r\n\r\n\r\n    const maxValue = useMemo(() => {\r\n        if (!states.length) return 100;\r\n        return Math.max(...states.map(state => {\r\n            const value = state.demographics[selectedMetric][selectedSubMetric];\r\n            return value || 0;\r\n        }));\r\n    }, [states, selectedMetric, selectedSubMetric]);\r\n\r\n    const subMetrics = useMemo(() => {\r\n        if (!states.length) return [];\r\n        return Object.keys(states[0]?.demographics[selectedMetric] || {}).filter(key => key !== 'Total');\r\n    }, [states, selectedMetric]);\r\n\r\n    const formatValue = (value) => {\r\n        return `${(value || 0).toFixed(1)}%`;\r\n    };\r\n\r\n    const refreshData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await fetchCensusData();\r\n            setStates(data);\r\n        } catch (error) {\r\n            console.error('Error refreshing data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"w-full min-h-screen bg-gray-50 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <RefreshCw className=\"animate-spin mx-auto mb-4\" size={48} />\r\n                    <p className=\"text-lg text-gray-600\">Loading demographic data...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"demographics-app\">\r\n            <Banner />    \r\n            <div className=\"container\">\r\n                {/* Header */}\r\n                <div className=\"demographics-header\">\r\n                    <h1 className=\"demographics-title\">US Demographics Data Viewer</h1>\r\n                    <p className=\"demographics-subtitle\">Explore real US Census demographic data by state</p>\r\n                    \r\n                    {/* API Status Alert */}\r\n                    {usingMockData && (\r\n                        <div className=\"demographics-alert\">\r\n                            <AlertTriangle className=\"demographics-alert__icon\" size={20} />\r\n                            <div className=\"demographics-alert__content\">\r\n                                <p className=\"demographics-alert__title\">Using Mock Data</p>\r\n                                <p className=\"demographics-alert__text\">\r\n                                    To use real Census data, consult me to insert or give you access to my API key.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Controls */}\r\n                <div className=\"demographics-controls\">\r\n                    <div className=\"demographics-controls__grid\">\r\n                        {/* Metric Selection */}\r\n                        <div className=\"demographics-form-group\">\r\n                            <label className=\"demographics-form-label\">Demographic Category</label>\r\n                            <select\r\n                                value={selectedMetric}\r\n                                onChange={(e) => {\r\n                                    setSelectedMetric(e.target.value);\r\n                                    const newSubMetrics = Object.keys(states[0]?.demographics[e.target.value] || {}).filter(key => key !== 'Total');\r\n                                    setSelectedSubMetric(newSubMetrics[0] || '');\r\n                                }}\r\n                                className=\"demographics-form-select\"\r\n                            >\r\n                                {Object.entries(METRICS).map(([key, value]) => (\r\n                                    <option key={key} value={key}>{value.label}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        {/* Sub-metric Selection */}\r\n                        <div className=\"demographics-form-group\">\r\n                            <label className=\"demographics-form-label\">Specific Metric</label>\r\n                            <select\r\n                                value={selectedSubMetric}\r\n                                onChange={(e) => setSelectedSubMetric(e.target.value)}\r\n                                className=\"demographics-form-select\"\r\n                            >\r\n                                {subMetrics.map(metric => (\r\n                                    <option key={metric} value={metric}>{metric}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        {/* Refresh Button */}\r\n                        <div className=\"demographics-form-group\">\r\n                            <button\r\n                                onClick={refreshData}\r\n                                disabled={loading}\r\n                                className=\"demographics-btn\"\r\n                            >\r\n                                <RefreshCw className={loading ? 'animate-spin' : ''} size={16} />\r\n                                <span>Refresh Data</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"demographics-layout\">\r\n                    {/* US Map View */}\r\n                    <div className=\"demographics-map-section\">\r\n                        <div className=\"demographics-map-header\">\r\n                            <h2 className=\"demographics-map-title\">US States Visualization</h2>\r\n                            <div className=\"demographics-map-info\">\r\n                                {React.createElement(METRICS[selectedMetric].icon, { size: 20 })}\r\n                                <span>{METRICS[selectedMetric].label}: {selectedSubMetric}</span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {/* US-shaped grid */}\r\n                        <div className=\"demographics-map-container\">\r\n                            <div className=\"demographics-map-grid\">\r\n                                {states.map((state) => {\r\n                                    const position = US_STATE_POSITIONS[state.state];\r\n                                    if (!position) return null;\r\n                                    \r\n                                    const value = state.demographics[selectedMetric][selectedSubMetric] || 0;\r\n                                    const color = getMetricColor(value, maxValue, METRICS[selectedMetric].color);\r\n                                    \r\n                                    return (\r\n                                        <div\r\n                                            key={state.state}\r\n                                            className=\"state-tile\"\r\n                                            style={{\r\n                                                backgroundColor: color,\r\n                                                left: `${(position.col / 12) * 100}%`,\r\n                                                top: `${(position.row / 11) * 100}%`,\r\n                                            }}\r\n                                            onMouseEnter={() => setHoveredState(state)}\r\n                                            onMouseLeave={() => setHoveredState(null)}\r\n                                            onClick={() => setSelectedState(state)}\r\n                                            title={`${state.state}: ${formatValue(value)}`}\r\n                                        >\r\n                                            {state.state}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            \r\n                            {/* Legend */}\r\n                            <div className=\"demographics-legend\">\r\n                                <div className=\"demographics-legend__title\">Percentage Scale</div>\r\n                                <div className=\"demographics-legend__scale\">\r\n                                    <span className=\"demographics-legend__label\">0%</span>\r\n                                    <div className=\"demographics-legend__colors\">\r\n                                        {[0, 0.25, 0.5, 0.75, 1].map((intensity, i) => (\r\n                                            <div\r\n                                                key={i}\r\n                                                className=\"demographics-legend__color\"\r\n                                                style={{ \r\n                                                    backgroundColor: getMetricColor(intensity * maxValue, maxValue, METRICS[selectedMetric].color)\r\n                                                }}\r\n                                            />\r\n                                        ))}\r\n                                    </div>\r\n                                    <span className=\"demographics-legend__label\">{formatValue(maxValue)}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Details Panel */}\r\n                    <div className=\"demographics-sidebar\">\r\n                        {/* Current Selection Info */}\r\n                        <div className=\"demographics-info-card\">\r\n                            <h3 className=\"demographics-info-title\">Current Selection</h3>\r\n                            <div className=\"demographics-info-list\">\r\n                                <div className=\"demographics-info-item\">\r\n                                    <span className=\"demographics-info-label\">Metric:</span>\r\n                                    <span className=\"demographics-info-value\">{METRICS[selectedMetric].label}</span>\r\n                                </div>\r\n                                <div className=\"demographics-info-item\">\r\n                                    <span className=\"demographics-info-label\">Submetric:</span>\r\n                                    <span className=\"demographics-info-value\">{selectedSubMetric}</span>\r\n                                </div>\r\n                                <div className=\"demographics-info-item\">\r\n                                    <span className=\"demographics-info-label\">Max Value:</span>\r\n                                    <span className=\"demographics-info-value\">{formatValue(maxValue)}</span>\r\n                                </div>\r\n                                <div className=\"demographics-info-item\">\r\n                                    <span className=\"demographics-info-label\">Data Source:</span>\r\n                                    <span className=\"demographics-info-value\">{usingMockData ? 'Mock Data' : 'US Census ACS'}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Hovered State Info */}\r\n                        {hoveredState && (\r\n                            <div className=\"demographics-info-card demographics-info-card--highlight\">\r\n                                <h3 className=\"demographics-info-title demographics-info-title--highlight\">Hovered State</h3>\r\n                                <div className=\"demographics-state-details\">\r\n                                    <div className=\"demographics-state-header\">\r\n                                        <div className=\"demographics-state-name demographics-state-name--highlight\">{hoveredState.state}</div>\r\n                                        <div className=\"demographics-state-population demographics-state-population--highlight\">Population: {hoveredState.population.toLocaleString()}</div>\r\n                                    </div>\r\n                                    <div className=\"demographics-info-item\">\r\n                                        <span className=\"demographics-info-label\">{selectedSubMetric}:</span>\r\n                                        <span className=\"demographics-info-value demographics-info-value--highlight\">\r\n                                            {formatValue(hoveredState.demographics[selectedMetric][selectedSubMetric])}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Selected State Details */}\r\n                        {selectedState && (\r\n                            <div className=\"demographics-info-card\">\r\n                                <h3 className=\"demographics-info-title\">State Details</h3>\r\n                                <div className=\"demographics-state-details\">\r\n                                    <div className=\"demographics-state-header\">\r\n                                        <div className=\"demographics-state-name\">{selectedState.state}</div>\r\n                                        <div className=\"demographics-state-population\">Population: {selectedState.population.toLocaleString()}</div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"demographics-metric-section\">\r\n                                        <h4 className=\"demographics-metric-title\">{METRICS[selectedMetric].label}</h4>\r\n                                        <div className=\"demographics-info-list\">\r\n                                            {Object.entries(selectedState.demographics[selectedMetric])\r\n                                                .filter(([key]) => key !== 'Total')\r\n                                                .map(([key, value]) => (\r\n                                                <div key={key} className=\"demographics-metric-item\">\r\n                                                    <span className={`demographics-metric-name ${key === selectedSubMetric ? 'demographics-metric-name--selected' : ''}`}>\r\n                                                        {key}:\r\n                                                    </span>\r\n                                                    <span className={`demographics-metric-value ${key === selectedSubMetric ? 'demographics-metric-value--selected' : ''}`}>\r\n                                                        {formatValue(value)}\r\n                                                    </span>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Quick Stats */}\r\n                        <div className=\"demographics-info-card\">\r\n                            <h3 className=\"demographics-info-title\">Quick Stats</h3>\r\n                            <div className=\"demographics-info-list\">\r\n                                <div className=\"demographics-info-item\">\r\n                                    <span className=\"demographics-info-label\">Total States:</span>\r\n                                    <span className=\"demographics-info-value\">{states.length}</span>\r\n                                </div>\r\n                                <div className=\"demographics-info-item\">\r\n                                    <span className=\"demographics-info-label\">Average {selectedSubMetric}:</span>\r\n                                    <span className=\"demographics-info-value\">\r\n                                        {formatValue(states.reduce((sum, s) => sum + (s.demographics[selectedMetric][selectedSubMetric] || 0), 0) / states.length)}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"demographics-info-item\">\r\n                                    <span className=\"demographics-info-label\">Highest State:</span>\r\n                                    <span className=\"demographics-info-value\">\r\n                                        {states.reduce((max, state) => \r\n                                            (state.demographics[selectedMetric][selectedSubMetric] || 0) > (max.demographics[selectedMetric][selectedSubMetric] || 0) ? state : max\r\n                                        , states[0] || {}).state || 'N/A'}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Instructions and API Setup */}\r\n                <div className=\"demographics-info-card\" style={{ marginTop: '1.5rem' }}>\r\n                    <h3 className=\"demographics-info-title\">How to Use:</h3>\r\n                    <ul style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.5rem', paddingLeft: '1rem' }}>\r\n                        <li>• Select a demographic category and specific metric from the dropdowns</li>\r\n                        <li>• Hover over states on the map to see quick info</li>\r\n                        <li>• Click on states to view detailed demographic breakdowns</li>\r\n                        <li>• Colors indicate percentage intensity - darker colors represent higher percentages</li>\r\n                        <li>• Use the refresh button to reload data</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {usingMockData && (\r\n                    <div className=\"demographics-info-card demographics-info-card--highlight\" style={{ marginTop: '1rem' }}>\r\n                        <h3 className=\"demographics-info-title demographics-info-title--highlight\">Setup Real Census Data:</h3>\r\n                        <div style={{ fontSize: '0.875rem', color: '#1d4ed8', marginTop: '0.5rem' }}>\r\n                            <p>To use real US Census data, contact me</p>\r\n                            <p style={{ marginTop: '0.5rem', fontSize: '0.75rem', color: '#2563eb' }}>\r\n                                US Census API provides data for age groups, race/ethnicity, education levels, and income brackets at the state level.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"demographics-info-card\" style={{ marginTop: '1rem', backgroundColor: '#f0fdf4', border: '1px solid #bbf7d0' }}>\r\n                    <h3 className=\"demographics-info-title\" style={{ color: '#166534' }}>Data Sources & API Information:</h3>\r\n                    <div style={{ fontSize: '0.875rem', color: '#15803d', marginTop: '0.25rem' }}>\r\n                        <p>This product uses the Census Bureau Data API but is not endorsed or certified by the Census Bureau.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["__iconNode","Calendar","createLucideIcon","GraduationCap","MapPin","RefreshCw","TriangleAlert","Users","US_STATE_POSITIONS","ACS_YEAR","LOCAL_DATA_URL","ACS_VARIABLES","METRICS","generateMockStateData","states","stateCode","getColorIntensity","value","max","getMetricColor","maxValue","baseColor","intensity","buildVariableString","variables","allVars","category","variable","v","aggregateVariables","data","variableMap","result","key","sum","fetchCensusData","variableString","url","response","headers","rows","row","rowData","header","index","stateName","getStateNameFromCode","calculatePercentages","error","total","fipsCode","USDemographicsViewer","setStates","useState","selectedMetric","setSelectedMetric","selectedSubMetric","setSelectedSubMetric","hoveredState","setHoveredState","selectedState","setSelectedState","loading","setLoading","usingMockData","setUsingMockData","useEffect","res","useMemo","state","subMetrics","formatValue","refreshData","jsxs","jsx","Banner","AlertTriangle","e","newSubMetrics","metric","React","position","color","s"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}