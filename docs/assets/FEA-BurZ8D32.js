import{r as x,j as a,B as ce}from"./index-CYfQAj5N.js";function W(e,t,n,r){return(1-e)**2*t+2*(1-e)*e*n+e**2*r}function N(e,t,n,r,o){e=Math.max(0,Math.min(e,n.exit_x));const l=e/n.exit_x,i=n,c=W(l,W(l,i.inlet_radius,i.cp1y,i.throat_radius),W(l,i.throat_radius,i.cp2y,i.switcher_y),W(l,i.switcher_y,i.cp3y,i.exit_radius))*r;return t?o/2-c:o/2+c}function ue(e,t,n,r,o){const l=Array(e).fill(0),i=Array(e).fill(0);for(let s=0;s<e;s++){const c=s*t+t/2,u=t;if(s<e-1){const g=N(c,!0,n,r,o),p=N(c,!1,n,r,o),y=N(c+u,!0,n,r,o),v=N(c+u,!1,n,r,o);l[s]=Math.atan2(y-g,u),i[s]=Math.atan2(v-p,u)}else l[s]=l[s-1]||0,i[s]=i[s-1]||0}return{top:l,bottom:i}}function de(e){const{rows:t,cols:n,cellWidth:r,cellHeight:o,controlPoints:l,scaleY:i,canvasHeight:s}=e;console.log("Creating flow domain with dimensions:",n,"x",t),e.isInside=Array.from({length:t},()=>Array(n).fill(!1)),e.isBoundary=Array.from({length:t},()=>Array(n).fill(!1));const c=ue(n,r,l,i,s);e.wallAngleTop=c.top,e.wallAngleBottom=c.bottom;for(let p=0;p<t;p++)for(let y=0;y<n;y++){const v=y*r+r/2,w=p*o+o/2;if(v<=l.exit_x){const h=N(v,!0,l,i,s),d=N(v,!1,l,i,s);if(w>=h&&w<=d){e.isInside[p][y]=!0;const I=Math.abs(w-h),R=Math.abs(w-d),j=Math.min(I,R),f=Math.max(r,o)*1.5;j<f&&(e.isBoundary[p][y]=!0)}}}let u=0,g=0;for(let p=0;p<t;p++)for(let y=0;y<n;y++)e.isInside[p][y]&&(e.isBoundary[p][y]?g++:u++);console.log(`Domain created: ${u} interior cells, ${g} boundary cells`)}function K(e){const{rows:t,cols:n,isInside:r,isBoundary:o}=e,l=3,i=.8,s=2,c=1.5;console.log("Initializing flow field...");for(let u=0;u<t;u++)for(let g=0;g<n;g++)if(r[u][g]&&!o[u][g]){const p=g/(n-1);velocityX[u][g]=i*(1+p*.5),velocityY[u][g]=0,pressure[u][g]=l*(1-p*.3),density[u][g]=c*(1-p*.2),temperature[u][g]=s*(1-p*.1)}else o[u][g]&&(e.velocityX[u][g]=0,e.velocityY[u][g]=0);console.log("Flow field initialized.")}let $=[],q=[],G=[];function he(e,t){$.length===0&&($=Array.from({length:e},()=>Array(t).fill(0)),q=Array.from({length:e},()=>Array(t).fill(0)),G=Array.from({length:e},()=>Array(t).fill(0)))}function me(e){const{rows:t,cols:n,velocityX:r,velocityY:o,pressure:l}=e;he(t,n);for(let i=0;i<t;i++)for(let s=0;s<n;s++)$[i][s]=r[i][s],q[i][s]=o[i][s],G[i][s]=l[i][s]}function Z(e){const{rows:t,cols:n,isInside:r,isBoundary:o,velocityX:l,velocityY:i,pressure:s,density:c,cellWidth:u,cellHeight:g}=e;let p=0,y=0,v=0,w=0;for(let h=1;h<t-1;h++)for(let d=1;d<n-1;d++)if(r[h][d]&&!o[h][d]){const I=l[h][d]-$[h][d],R=i[h][d]-q[h][d];p+=I*I+R*R;const j=s[h][d]-G[h][d];y+=j*j;const f=c[h][d],b=c[h][d-1]||f,A=c[h][d+1]||f,F=c[h-1][d]||f,k=c[h+1][d]||f,z=l[h][d-1]||l[h][d],C=l[h][d+1]||l[h][d],B=i[h-1][d]||l[h][d],U=i[h+1][d]||l[h][d],T=(A*C-b*z)/(2*u),P=(k*U-F*B)/(2*g),X=Math.abs(T+P);v+=X*X,w++}return{velocity:Math.sqrt(p/Math.max(w,1)),pressure:Math.sqrt(y/Math.max(w,1)),mass:Math.sqrt(v/Math.max(w,1))}}function ge(e){const t=S;t.velocity.push(e.velocity),t.pressure.push(e.pressure),t.mass.push(e.mass),t.velocity.length>t.maxHistory&&(t.velocity.shift(),t.pressure.shift(),t.mass.shift())}function fe(e){if(E.state!=="running"||!e)return!1;me(e);const{rows:t,cols:n,isInside:r,isBoundary:o}=e;(!e.velocityX||e.velocityX.length===0)&&K(e);for(let i=0;i<t;i++)for(let s=0;s<n;s++)if(r[i][s]&&!o[i][s]){const c=s/(n-1),u=Math.sin(E.totalIterations*.1)*.1;e.velocityX[i][s]=50+c*100+u*20,e.velocityY[i][s]=Math.sin(c*Math.PI)*10+u*5,e.pressure[i][s]=101325*(1-c*.3+u*.1),e.density[i][s]=1.225*(1-c*.2+u*.05),e.temperature[i][s]=300-c*50+u*10}const l=Z(e);return ge(l),E.totalIterations++,E.totalIterations>100?(console.log('Simulation "Converged" - reached max iterations'),!1):!0}function pe(e){return Z(e)}function ve(e,t,n){const r=e.getContext("2d");return e.width=1e3,e.height=500,r.clearRect(0,0,e.width,e.height),t&&(t.width=30,t.height=400),n&&(n.width=380,n.height=250),r}function ee(e,t){const{controlPoints:n,scaleY:r,canvasHeight:o}=t;if(!n)return;e.strokeStyle="#333",e.lineWidth=2,e.fillStyle="rgba(100,100,100,0.3)";const l=100;e.beginPath();for(let i=0;i<=l;i++){const s=i/l*n.exit_x,c=N(s,!0,n,r,o);i===0?e.moveTo(s,c):e.lineTo(s,c)}for(let i=l;i>=0;i--){const s=i/l*n.exit_x,c=N(s,!1,n,r,o);e.lineTo(s,c)}e.closePath(),e.fill(),e.stroke(),e.strokeStyle="rgba(0,0,0,0.3)",e.lineWidth=1,e.setLineDash([5,5]),e.beginPath(),e.moveTo(0,o/2),e.lineTo(n.exit_x,o/2),e.stroke(),e.setLineDash([])}function te(e,t,n=null){for(let f=0;f<Math.min(5,t.velocityX.length);f++)console.log(`velocityX[${f}]:`,t.velocityX[f]?`array of ${t.velocityX[f].length}`:"undefined");const{rows:r,cols:o,velocityX:l,velocityY:i,pressure:s,temperature:c,density:u,isInside:g,isBoundary:p,cellWidth:y,cellHeight:v,visualizationMode:w}=t;let h;switch(w){case"pressure":h=s;break;case"temperature":h=c;break;case"density":h=u;break;case"velocity":h=Array.from({length:r},(f,b)=>Array.from({length:o},(A,F)=>{if(!t.velocityX[b])return console.error(`Row ${b} is undefined in velocityX`),[0,0,0,255];const k=l[b][F]||0,z=i[b][F]||0;return Math.sqrt(k*k+z*z)}));break;default:h=s}const d=[];for(let f=0;f<r;f++)for(let b=0;b<o;b++)if(g[f][b]&&!p[f][b]){const A=h[f][b];!isNaN(A)&&isFinite(A)&&d.push(A)}if(d.length===0)return;const I=Math.min(...d),R=Math.max(...d),j=d.reduce((f,b)=>f+b,0)/d.length;ye(I,R,j),n?.onStatsUpdate&&n.onStatsUpdate({min:I,max:R,avg:j}),e.imageSmoothingEnabled=!0,e.imageSmoothingQuality="high";for(let f=0;f<r;f++)for(let b=0;b<o;b++){if(!g[f][b])continue;const A=h[f][b],F=ne(A,I,R,w);e.fillStyle=F,e.fillRect(b*y,f*v,y,v)}xe(I,R,w)}function ye(e,t,n){const r=document.getElementById("min-label"),o=document.getElementById("avg-label"),l=document.getElementById("max-label");r&&(r.textContent=e.toFixed(3)),o&&(o.textContent=n.toFixed(3)),l&&(l.textContent=t.toFixed(3))}function ne(e,t,n,r){isFinite(e)||(e=t);let o=0;n>t&&(o=Math.max(0,Math.min(1,(e-t)/(n-t))));let l,i,s;switch(r){case"velocity":if(o<.25){const c=o/.25;l=0,i=Math.floor(c*255),s=255}else if(o<.5){const c=(o-.25)/.25;l=0,i=255,s=Math.floor(255*(1-c))}else if(o<.75){const c=(o-.5)/.25;l=Math.floor(c*255),i=255,s=0}else{const c=(o-.75)/.25;l=255,i=Math.floor(255*(1-c)),s=0}break;case"pressure":case"temperature":case"density":l=Math.floor(o*255),i=0,s=Math.floor((1-o)*255);break;default:l=Math.floor(o*255),i=Math.floor(o*128),s=Math.floor((1-o)*255)}return`rgb(${l}, ${i}, ${s})`}function xe(e,t,n){const r=document.getElementById("colorbar");if(!r)return;const o=r.getContext("2d"),l=r.height,i=r.width;o.clearRect(0,0,i,l);const s=o.createLinearGradient(0,l,0,0),c=20;for(let w=0;w<=c;w++){const h=w/c,d=e+h*(t-e),I=ne(d,e,t,n);s.addColorStop(h,I)}o.fillStyle=s,o.fillRect(0,0,i,l),o.strokeStyle="#ccc",o.lineWidth=1,o.strokeRect(0,0,i,l);const u=document.getElementById("max-label"),g=document.getElementById("mid-label"),p=document.getElementById("min-label"),y=document.getElementById("colorbar-title");u&&(u.textContent=t.toFixed(3)),g&&(g.textContent=((t+e)/2).toFixed(3)),p&&(p.textContent=e.toFixed(3));const v={velocity:"Velocity",pressure:"Pressure",temperature:"Temperature",density:"Density"};y&&(y.textContent=v[n]||"Value")}function se(e){if(!e)return;const t=e.getContext("2d"),n=e.width,r=e.height;if(t.clearRect(0,0,n,r),t.fillStyle="rgba(0,0,0,0.8)",t.fillRect(0,0,n,r),S.velocity.length<2)return;const o=[...S.velocity,...S.pressure,...S.mass],l=Math.max(1e-12,Math.min(...o)),i=Math.max(l*1.01,Math.max(...o)),s=Math.log10(l),c=Math.log10(i),u=c-s;u<=0||(be(t,n,r,s,c,u),Ce(t,n,r,s,u),drawConvergenceLabels(t,n,r,s,u))}function be(e,t,n,r,o,l){e.strokeStyle="rgba(255,255,255,0.2)",e.lineWidth=1;for(let s=Math.floor(r);s<=Math.ceil(o);s++){const c=n-(s-r)/l*n;e.beginPath(),e.moveTo(0,c),e.lineTo(t,c),e.stroke(),e.fillStyle="rgba(255,255,255,0.7)",e.font="10px Arial",e.fillText(`1e${s}`,5,c-2)}const i=Math.max(1,Math.floor(S.velocity.length/5));for(let s=0;s<S.velocity.length;s+=i){const c=S.velocity.length>1?s/(S.velocity.length-1)*t:0;e.beginPath(),e.moveTo(c,0),e.lineTo(c,n),e.stroke()}}function Ce(e,t,n,r,o){[{data:S.velocity,color:"blue",label:"Velocity"},{data:S.pressure,color:"green",label:"Pressure"},{data:S.mass,color:"red",label:"Mass"}].forEach(i=>{if(!(i.data.length<2)){e.strokeStyle=i.color,e.lineWidth=2,e.beginPath();for(let s=0;s<i.data.length;s++){const c=s/(i.data.length-1)*t,u=Math.log10(Math.max(1e-12,i.data[s])),g=n-(u-r)/o*n;s===0?e.moveTo(c,g):e.lineTo(c,g)}e.stroke()}})}function L(e){E.state=e;const t=document.getElementById("simulation-status"),n=document.getElementById("status-indicator"),r=document.getElementById("start-btn"),o=document.getElementById("pause-btn");if(!t||!n||!r||!o){console.log("Status updated to: ",e,"(DOM elements not found)");return}const i={running:{text:"Running",class:"status-indicator status-running",startDisabled:!0,pauseDisabled:!1},paused:{text:"Paused",class:"status-indicator status-paused",startDisabled:!1,pauseDisabled:!0},converged:{text:"Converged",class:"status-indicator status-converged",startDisabled:!1,pauseDisabled:!0},stopped:{text:"Ready",class:"status-indicator status-paused",startDisabled:!1,pauseDisabled:!0},ready:{text:"Ready",class:"status-indicator status-paused",startDisabled:!1,pauseDisabled:!0},error:{text:"Error",class:"status-indicator status-error",startDisabled:!0,pauseDisabled:!0}}[e.toLowerCase()];if(!i){console.warm("Unknown status:",e);return}t.textContent=i.text,n.className=i.class,r.disabled=i.startDisabled,o.disabled=i.pauseDisabled,console.log("Status updated to:",i.text)}function we(e){const t=document.getElementById("time-step"),n=document.getElementById("total-iterations"),r=document.getElementById("velocity-residual"),o=document.getElementById("pressure-residual"),l=document.getElementById("mass-residual");t&&(t.textContent=E.timeStep),n&&(n.textContent=E.totalIterations),r&&(r.textContent=e.velocity.toExponential(3)),o&&(o.textContent=e.pressure.toExponential(3)),l&&(l.textContent=e.mass.toExponential(3));const i=ae();i?.onConvergenceUpdate&&i.onConvergenceUpdate({timeStep:E.timeStep,totalIterations:E.totalIterations,velocityResidual:e.velocity.toExponential(3),pressureResidual:e.pressure.toExponential(3),massResidual:e.mass.toExponential(3)});const s=document.getElementById("convergence-canvas");s&&se(s)}function D(){const e=document.getElementById("vel-tolerance"),t=document.getElementById("press-tolerance"),n=document.getElementById("mass-tolerance");if(e){const r=parseFloat(e.value)||1e-6;H("velocity",r)}if(t){const r=parseFloat(t.value)||1e-6;H("pressure",r)}if(n){const r=parseFloat(n.value)||1e-6;H("mass",r)}}function Ee(){["vel-tolerance","press-tolerance","mass-tolerance"].forEach(t=>{const n=document.getElementById(t);n&&(n.addEventListener("change",D),n.addEventListener("input",D))})}function Se(e,t,n){console.log("Stating animation loop...");const r=()=>{if(E.state!=="running"){console.log("Animation loop stopped - simulation not running");return}if(!t){console.error("Simulation data not available for animation");return}const l=e.getContext("2d");if(!l){console.error("Failed to get canvas context");return}if(l.clearRect(0,0,e.width,e.height),E.timeStep%2===0){D();let s;try{s=fe(t)}catch(c){console.error("Error updating flow: ",c),E.state="error",L("error");return}try{const c=pe(t);we(c)}catch(c){console.error("Error updating convergence display: ",c)}if(!s){const c=ie();c!==null&&(cancelAnimationFrame(c),V(null)),E.state="converged",L("converged"),Ie(l,t,n);return}}E.timeStep++;try{Q(l,t,n)}catch(s){console.error("Error rendering frame: ",s)}const i=requestAnimationFrame(r);V(i)},o=requestAnimationFrame(r);V(o)}function O(){const e=ie();e!==null&&(cancelAnimationFrame(e),V(null),console.log("Animation loop stopped"))}function Q(e,t,n){te(e,t,n),ee(e,t)}function Ie(e,t,n){console.log("Rendering final convergeed state"),Q(e,t,n)}let _=null;function je(e){const t=document.getElementById("start-btn"),n=document.getElementById("pause-btn"),r=document.getElementById("reset-btn");_={start:()=>{console.log("Start button clicked"),e?.start&&e.start()},pause:()=>{console.log("Pause button clicked"),e?.pause&&e.pause()},reset:()=>{console.log("Reset button clicked"),e?.reset&&e.reset()}},t&&(t.removeEventListener("click",_.start),t.addEventListener("click",_.start)),n&&(n.removeEventListener("click",_.pause),n.addEventListener("click",_.pause)),r&&(r.removeEventListener("click",_.reset),r.addEventListener("click",_.reset)),console.log("Control buttons setup complete")}function Me(){document.querySelectorAll('input[name="vizMode"]').forEach(t=>{t.addEventListener("change",n=>{const r=Xe();if(r){r.visualizationMode=n.target.value;const o=document.getElementById("fea-canvas");if(o){const l=o.getContext("2d");l.clearRect(0,0,o.width,o.height),Q(l,r,ae())}console.log("Visualization mode changed to: ",n.target.value)}})})}function Re(e){console.log("Initializing UI controls...");try{Me(),Ee(),je(e),console.log("UI initialization complete")}catch(t){console.error("Error initializing UI: ",t)}}const E={state:"stopped",timeStep:0,totalIterations:0};let oe=null;function V(e){oe=e}function ie(){return oe}const S={velocity:[],pressure:[],mass:[],maxHistory:200};let Y={velocity:1e-6,pressure:1e-6,mass:1e-6},m=null,M=null;function Ae(e,t){if(console.log("=== FEA initialization starting ==="),!e)return console.error("Canvas is null or undefined"),null;const n=e.getContext("2d");return n?(m=t.current,console.log("Canvas Dimensions: ",e.width,"x",e.height),console.log("Simulation Data: ",m),n.fillStyle="red",n.fillRect(10,10,50,50),console.log("Red test square drawn at (10,10)"),setTimeout(()=>{try{ze(e,n),console.log("=== FEA initialization complete ===")}catch(r){console.error("Failed to initialize FEA: ",r),L("error")}},100),ke(e)):(console.error("Could not get canvas context"),null)}function ze(e,t){t.clearRect(0,0,e.width,e.height),Fe(e),console.log("Creating flow domain..."),de(m),console.log("Flow domain created. isInside length: ",m.isInside?.length),re(),le(),J(t),L("ready")}function Fe(e){m.canvasWidth=e.width,m.canvasHeight=e.height,m.cellWidth=m.canvasWidth/m.cols,m.cellHeight=m.canvasHeight/m.rows}function re(){const{rows:e,cols:t}=m;m.velocityX=[],m.velocityY=[],m.pressure=[],m.temperature=[],m.density=[];for(let n=0;n<e;n++)m.velocityX[n]=new Array(t).fill(0),m.velocityY[n]=new Array(t).fill(0),m.pressure[n]=new Array(t).fill(101325),m.temperature[n]=new Array(t).fill(300),m.density[n]=new Array(t).fill(1.225)}function le(){const{rows:e,cols:t,isInside:n}=m;for(let r=0;r<e;r++)for(let o=0;o<t;o++)if(n&&n[r]&&n[r][o]){const l=o/(t-1);m.velocityX[r][o]=50+l*100,m.velocityY[r][o]=Math.sin(l*Math.PI)*5,m.pressure[r][o]=101325+(1-l*.3),m.temperature[r][o]=300-l*50,m.density[r][o]=1.225*(1-l*.2)}}function J(e){try{ee(e,m),te(e,m,M),console.log("Initial rendering complete")}catch(t){console.error("Error rendering initial state: ",t)}}function ke(e){return{start:()=>Be(e),pause:()=>Ne(),reset:()=>Te(e),setTolerance:(t,n)=>_e(t,n),setCallbacks:t=>Le(t),updateVisualization:()=>Pe(e),cleanup:()=>Ue()}}function Be(e){console.log("Starting simulation..."),E.state="running",L("running"),M?.onStatusUpdate&&M.onStatusUpdate("running"),Se(e,m,M)}function Ne(){console.log("Pausing simulation..."),E.state="paused",L("paused"),M?.onStatusUpdate&&M.onStatusUpdate("paused"),O()}function Te(e){console.log("Resetting simulation..."),O(),E.state="stopped",E.timeStep=0,E.totalIterations=0,S.velocity=[],S.pressure=[],S.mass=[],re();try{K(m),le()}catch(n){console.log("Error reinitializing flow: ",n)}L("ready"),M?.onStatusUpdate&&M.onStatusUpdate("ready"),M?.onConvergenceUpdate&&M.onConvergenceUpdate({timeStep:0,totalIterations:0,velocityResidual:"-",pressureResidual:"-",massResidual:"-"});const t=e.getContext("2d");J(t)}function _e(e,t){console.log(`Setting ${e} tolerance to ${t}`),e in Y&&(Y[e]=t)}function Le(e){M=e,console.log("Callbacks set: ",Object.keys(M||{}))}function Pe(e){const t=e.getContext("2d");J(t)}function Ue(){console.log("Cleaning up simulation..."),E.state="stopped",O()}function Xe(){return m}function ae(){return M}function H(e,t){e in Y&&(Y[e]=t)}function Ve(){const e=x.useRef(null),t=x.useRef(null),n=x.useRef(null),[r,o]=x.useState("Initializing"),[l,i]=x.useState(!1),[s,c]=x.useState("velocity"),[u,g]=x.useState({min:0,avg:0,max:0}),[p,y]=x.useState({timeStep:0,totalIterations:0,velocityResidual:"-",pressureResidual:"-",massResidual:"-"});x.useRef(null);const v=x.useRef(null),[w,h]=x.useState(!1),[d,I]=x.useState({width:800,height:400}),R=C=>{switch(C.toLowerCase()){case"running":return"running";case"paused":return"paused";case"ready":return"ready";case"error":return"error";default:return"unknown"}},j=x.useRef({controlPoints:{inlet_radius:20,inlet_length:50,cp1x:60,cp1y:25,cp2x:100,cp2y:40,cp3x:150,cp3y:60,throat_x:90,throat_radius:15,switcher_x:120,switcher_y:35,exit_x:200,exit_radius:30},scaleY:2,rows:100,cols:200,cellWidth:5,cellHeight:5,canvasHeight:500,visualizationMode:s,velocityX:[],velocityY:[],pressure:[],temperature:[],density:[],isInside:[],isBoundary:[]}),f=x.useCallback(()=>{const C=t.current?.parentElement;if(C){const B=C.clientWidth-120,U=800,T=400;let P=Math.min(B,U),X=P/U*T;P<600&&(P=600,X=300),I({width:P,height:X})}},[]);x.useEffect(()=>(f(),window.addEventListener("resize",f),()=>window.removeEventListener("resize",f)),[f]),x.useEffect(()=>{t.current&&(t.current.width=d.width,t.current.height=d.height,t.current.style.width=`${d.width}px`,t.current.style.height=`${d.height}px`)},[d]),x.useEffect(()=>{w&&j.current&&(j.current.visualizationMode=s)},[s,w]);const b=x.useCallback(()=>{v.current?.start&&(v.current.start(),i(!0),o("Running"))},[]),A=x.useCallback(()=>{v.current?.pause&&(v.current.pause(),i(!1),o("Paused"))},[]),F=x.useCallback(()=>{v.current?.reset&&(v.current.reset(),i(!1),o("Reset"),g({min:0,avg:0,max:0}),y({timeStep:0,totalIterations:0,velocityResidual:"-",pressureResidual:"-",massResidual:"-"}))},[]),k=x.useCallback((C,B)=>{v.current?.setTolerance&&v.current.setTolerance(C,parseFloat(B))},[]);x.useEffect(()=>{let C;const B=()=>{if(console.log("Initializing FEA simulation..."),console.log("Canvas ref:",t.current),console.log("Simulation data:",j.current),!t.current){console.log("Canvas not ready yet, retrying"),C=setTimeout(B,100);return}try{console.log("Canvas is ready, initializing FEA..."),ve(t.current,document.getElementById("colorbar"),e.current),j.current.canvasHeight=d.height,v.current=Ae(t.current,j),v.current?(v.current.setCallbacks({onStatusUpdate:o,onStatsUpdate:g,onConvergenceUpdate:y}),Re(v.current),h(!0),o("Ready"),console.log("FEA initialization successful")):(console.error("Failed to get simulation control interface"),o("Error"))}catch(T){console.error("Error initializing FEA:",T),o("Error")}};return C=setTimeout(B,200),setTimeout(()=>{if(e.current)try{se(e.current)}catch(T){console.error("Failed to draw initial convergence chart",T)}},300),()=>{C&&clearTimeout(C),v.current?.cleanup&&v.current.cleanup()}},[d]);const z=x.useCallback(C=>{c(C.target.value)},[]);return a.jsxs(a.Fragment,{children:[a.jsx(ce,{}),a.jsx("div",{className:"title",children:a.jsx("h1",{children:"FEA Nozzle Simulator"})}),a.jsxs("div",{className:"main-layout",children:[a.jsxs("div",{className:"left-section",children:[a.jsxs("div",{className:"canvas-area",children:[a.jsx("canvas",{ref:t,id:"fea-canvas",width:"1000",height:"500",style:{width:`${d.width}px`,height:`${d.height}px`}}),a.jsxs("div",{className:"colorbar-container",children:[a.jsx("div",{id:"colorbar-title",className:"colorbar-labels",children:s.charAt(0).toUpperCase()+s.slice(1)}),a.jsx("div",{id:"max-label",className:"colorbar-labels",children:u.max.toFixed(3)}),a.jsx("canvas",{ref:n,id:"colorbar",width:"30",height:"300"}),a.jsx("div",{id:"mid-label",className:"colorbar-labels",style:{position:"absolute",marginTop:"150px"},children:u.avg.toFixed(3)}),a.jsx("div",{id:"min-label",className:"colorbar-labels",children:u.min.toFixed(3)})]})]}),a.jsxs("div",{className:"controls",children:[a.jsx("strong",{children:"Visualization Mode:"}),a.jsxs("label",{children:[a.jsx("input",{type:"radio",name:"vizMode",value:"pressure",checked:s==="pressure",onChange:z}),"Pressure"]}),a.jsxs("label",{children:[a.jsx("input",{type:"radio",name:"vizMode",value:"velocity",checked:s==="velocity",onChange:z}),"Velocity"]}),a.jsxs("label",{children:[a.jsx("input",{type:"radio",name:"vizMode",value:"temperature",checked:s==="temperature",onChange:z}),"Temperature"]}),a.jsxs("label",{children:[a.jsx("input",{type:"radio",name:"vizMode",value:"density",checked:s==="density",onChange:z}),"Density"]})]}),a.jsxs("div",{className:"stats",children:[a.jsxs("div",{className:"stat-item",children:["Min: ",a.jsx("span",{id:"min-value",className:"stat-value",children:u.min.toFixed(2)})]}),a.jsxs("div",{className:"stat-item",children:["Avg: ",a.jsx("span",{id:"avg-value",className:"stat-value",children:u.avg.toFixed(2)})]}),a.jsxs("div",{className:"stat-item",children:["Max: ",a.jsx("span",{id:"max-value",className:"stat-value",children:u.max.toFixed(2)})]})]})]}),a.jsxs("div",{className:"right-section",children:[a.jsxs("div",{className:"convergence-info",children:[a.jsx("h3",{children:"Simulation Status"}),a.jsxs("div",{className:"convergence-metric",children:[a.jsxs("span",{children:[a.jsx("span",{className:`status-indicator ${R(r)}`,id:"status-indicator"}),"Status:"]}),a.jsx("span",{className:"convergence-value",id:"simulation-status",children:r})]}),a.jsxs("div",{className:"convergence-metric",children:[a.jsx("span",{children:"Time Step:"}),a.jsx("span",{className:"convergence-value",id:"time-step",children:p.timeStep})]}),a.jsxs("div",{className:"convergence-metric",children:[a.jsx("span",{children:"Iterations:"}),a.jsx("span",{className:"convergence-value",id:"total-iterations",children:p.totalIterations})]}),a.jsxs("div",{className:"convergence-metric",children:[a.jsx("span",{children:"Velocity Residual:"}),a.jsx("span",{className:"convergence-value",id:"velocity-residual",children:p.velocityResidual})]}),a.jsxs("div",{className:"convergence-metric",children:[a.jsx("span",{children:"Pressure Residual:"}),a.jsx("span",{className:"convergence-value",id:"pressure-residual",children:p.pressureResidual})]}),a.jsxs("div",{className:"convergence-metric",children:[a.jsx("span",{children:"Mass Residual:"}),a.jsx("span",{className:"convergence-value",id:"mass-residual",children:p.massResidual})]})]}),a.jsxs("div",{className:"convergence-controls",children:[a.jsx("h3",{children:"Controls"}),a.jsxs("div",{style:{textAlign:"center",marginBottom:"15px"},children:[a.jsx("button",{className:"control-button",id:"start-btn",onClick:b,disabled:l,children:"Start"}),a.jsx("button",{className:"control-button",id:"pause-btn",onClick:A,disabled:!l,children:"Pause"}),a.jsx("button",{className:"control-button",id:"reset-btn",onClick:F,children:"Reset"})]}),a.jsx("hr",{}),a.jsxs("div",{style:{margin:"10px 0"},children:[a.jsx("label",{htmlFor:"vel-tolerance",children:"Velocity Tolerance:"}),a.jsx("input",{type:"number",className:"tolerance-input",id:"vel-tolerance",defaultValue:"1e-6",step:"1e-7",placeholder:"1e-6",onChange:C=>k("velocity",C.target.value)})]}),a.jsxs("div",{style:{margin:"10px 0"},children:[a.jsx("label",{htmlFor:"press-tolerance",children:"Pressure Tolerance:"}),a.jsx("input",{type:"number",className:"tolerance-input",id:"press-tolerance",defaultValue:"1e-6",step:"1e-7",placeholder:"1e-6",onChange:C=>k("pressure",C.target.value)})]}),a.jsxs("div",{style:{margin:"10px 0"},children:[a.jsx("label",{htmlFor:"mass-tolerance",children:"Mass Tolerance:"}),a.jsx("input",{type:"number",className:"tolerance-input",id:"mass-tolerance",defaultValue:"1e-6",step:"1e-7",placeholder:"1e-6",onChange:C=>k("mass",C.target.value)})]})]}),a.jsxs("div",{className:"convergence-canvas",children:[a.jsx("h3",{children:"Convergence History"}),a.jsx("canvas",{ref:e,id:"convergence-canvas",width:"400",height:"250"})]})]})]})]})}export{Ve as default};
//# sourceMappingURL=FEA-BurZ8D32.js.map
